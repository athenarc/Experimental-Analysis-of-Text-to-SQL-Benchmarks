[{"query": "SELECT AwayTeam FROM football_data WHERE HomeTeam = \"Omiya Ardija\" AND Season LIKE \"%2018%\"", "prediction": "select t2.awayteam from betfront as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/WorldSoccerDataBase/WorldSoccerDataBase.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT B365D FROM football_data WHERE HomeTeam = \"Swindon\" and AwayTeam = \"Millwall\" and Season = \"2016/2017\"", "prediction": "select t1.", "db_path": "storage/datasets/kaggle-dbqa/databases/WorldSoccerDataBase/WorldSoccerDataBase.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT avg(T1.c14) FROM FINREV_FED_17 as T1 JOIN FINREV_FED_KEY_17 as T2 ON T1.state_code = T2.state_code WHERE T2.state = \"Virginia\"", "prediction": "select avg(t1.t_fed_rev) from finrev_fed_17 as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT T2.state, sum(c14),sum(c25) FROM FINREV_FED_17 as T1 JOIN FINREV_FED_KEY_17 as T2 ON T1.state_code = T2.state_code JOIN NDECoreExcel_Math_Grade8 as T3 ON T2.state = T3.state GROUP BY T2.state ORDER BY T3.average_scale_score DESC LIMIT 10", "prediction": "select state_code, avg(average_scale_score), t2.t_fed_rev from ndecoreexcel_math_grade8 as t1 join finrev_fed_key_17 as t2", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: 'finrev_fed_key_17.t_fed_rev'"}, {"query": "SELECT T1.school_district, max(T1.c14), T3.average_scale_score FROM FINREV_FED_17 as T1 JOIN FINREV_FED_KEY_17 as T2 ON T1.state_code = T2.state_code JOIN NDECoreExcel_Math_Grade8 as T3 ON T2.state = T3.state UNION SELECT T1.school_district, max(T1.c25), T3.average_scale_score FROM FINREV_FED_17 as T1 JOIN FINREV_FED_KEY_17 as T2 ON T1.state_code = T2.state_code JOIN NDECoreExcel_Math_Grade8 as T3 ON T2.state = T3.state", "prediction": "select t1.state, avg(t2.average_scale_score) from ndecoreexcel_math_grade8 as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT T1.school_district, max(T1.t_fed_rev / T3.average_scale_score) FROM FINREV_FED_17 as T1 JOIN FINREV_FED_KEY_17 as T2 on T1.state_code = T2.state_code JOIN NDECoreExcel_Math_Grade8 as T3 ON T2.state = T3.state", "prediction": "select t1.school_district from finrev_fed_17 as t1 join ndecoreexcel_math_grade8 as t2 on t1.school_district = t2.school_d", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: 'ndecoreexcel_math_grade8.school_d'"}, {"query": "SELECT T1.school_district, min(T1.t_fed_rev / T3.average_scale_score) FROM FINREV_FED_17 as T1 JOIN FINREV_FED_KEY_17 as T2 on T1.state_code = T2.state_code JOIN NDECoreExcel_Math_Grade8 as T3 ON T2.state = T3.state", "prediction": "select t1.school_district from finrev_fed_17 as t1 join ndecoreexcel_math_grade8 as t2 on t1.school_district = t2.school_d", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: 'ndecoreexcel_math_grade8.school_d'"}, {"query": "SELECT T2.state FROM FINREV_FED_KEY_17 as T2 JOIN FINREV_FED_17 as T1 ON T1.state_code = T2.state_code GROUP BY T2.state ORDER BY sum(t_fed_rev) DESC LIMIT 1", "prediction": "select state from finrev_fed_17", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: Error col: state"}, {"query": "SELECT sum(T1.c14), sum(T1.c25) FROM FINREV_FED_17 as T1 JOIN FINREV_FED_KEY_17 as T2 ON T1.state_code = T2.state_code WHERE T2.state = \"Colorado\"", "prediction": "select t1.state_code, t1.c25 from finrev_fed_17 as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT t_fed_rev FROM FINREV_FED_17 WHERE school_district LIKE \"%Pecatonia Area%\"", "prediction": "select sum(finrev_fed_", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT average_scale_score FROM NDECoreExcel_Math_Grade8 WHERE state = \"North Carolina\" UNION SELECT average_scale_score FROM NDECoreExcel_Math_Grade8 WHERE state = \"South Carolina\"", "prediction": "select t1.state_code, t1.average_scale_score from ndecoreexcel_math_grade8 as t1", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: 'ndecoreexcel_math_grade8.state_code'"}, {"query": "SELECT count(*) FROM FINREV_FED_17 WHERE c25 > c14", "prediction": "select count(*) from (select t1.state_code from finrev_fed_17 as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/StudentMathScore/StudentMathScore.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT DISTINCT commod FROM sampledata15", "prediction": "select distinct", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT year, month, day FROM sampledata15 WHERE sample_pk = 3763", "prediction": "select", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT site FROM sampledata15 WHERE sample_pk = 3763", "prediction": "select distinct pestcode from sampledata15", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: Error col: pestcode"}, {"query": "SELECT quantity FROM sampledata15 WHERE sample_pk = 9628", "prediction": "select count(*) from sampledata15 where 9628 = '9628'", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: Error col: 9628"}, {"query": "SELECT confmethod FROM resultsdata15 as T2 JOIN sampledata15 as T1 ON T1.sample_pk = T2.sample_pk ORDER BY year, month, day DESC LIMIT 1", "prediction": "select t1.pestcode from resultsdata15 as t1 join sample", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: 'sample'"}, {"query": "SELECT conunit FROM resultsdata15 WHERE commod = \"PO\"", "prediction": "select t2.conunit from resultsdata15 as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT max(extract) FROM resultsdata15", "prediction": "select t1.confmethod from resultsdata15 as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT lab FROM resultsdata15 WHERE commod = \"AP\"", "prediction": "select t1.lab from resultsdata15 as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT commod FROM resultsdata15 WHERE mean = \"A\" GROUP BY commod ORDER BY count(*) DESC LIMIT 1", "prediction": "select t1.", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT max(commod) FROM resultsdata15", "prediction": "select t1.", "db_path": "storage/datasets/kaggle-dbqa/databases/Pesticide/Pesticide.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT votedby FROM hall_of_fame WHERE yearid = \"2000\" GROUP BY votedby ORDER BY count(*) DESC LIMIT 1", "prediction": "select votes from hall_of_fame where year = 2000", "db_path": "storage/datasets/kaggle-dbqa/databases/TheHistoryofBaseball/TheHistoryofBaseball.sqlite", "error": "predicted: Error col: year"}, {"query": "SELECT player_id FROM player_award WHERE year = 2010 AND award_id = \"Rookie of the Year\"", "prediction": "select t1.name_first, t1.name_last from player as t1 join player_award as t2 where t2.year = 2010 order by t1.votes_first", "db_path": "storage/datasets/kaggle-dbqa/databases/TheHistoryofBaseball/TheHistoryofBaseball.sqlite", "error": "predicted: 'player.votes_first'"}, {"query": "SELECT min(votes), yearid FROM hall_of_fame WHERE inducted = \"Y\" AND yearid >= 1871 GROUP BY yearid", "prediction": "select min(t1.votes), t2.year from hall_of_fame as t1 join player as", "db_path": "storage/datasets/kaggle-dbqa/databases/TheHistoryofBaseball/TheHistoryofBaseball.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT T1.birth_country FROM hall_of_fame as T2 JOIN player as T1 ON T1.player_id = T2.player_id WHERE T2.inducted = \"Y\" AND T2.yearid >= 1871", "prediction": "select t2.birth_", "db_path": "storage/datasets/kaggle-dbqa/databases/TheHistoryofBaseball/TheHistoryofBaseball.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT T1.birth_country FROM player as T1 JOIN hall_of_fame as T2 ON T1.player_id = T2.player_id WHERE T2.inducted = \"Y\" GROUP BY T1.birth_country ORDER BY count(*) DESC LIMIT 10", "prediction": "select birth_country, count(*) from hall_of_fame", "db_path": "storage/datasets/kaggle-dbqa/databases/TheHistoryofBaseball/TheHistoryofBaseball.sqlite", "error": "predicted: Error col: birth_country"}, {"query": "SELECT T2.team_id FROM hall_of_fame as T1 JOIN salary as T2 ON T1.player_id = T2.player_id AND T1.yearid = T2.year WHERE T1.inducted = \"Y\" GROUP BY T2.team_id ORDER BY count(*) DESC LIMIT 10", "prediction": "select t2.team_id from hall_of_fame as t1 join player as t2", "db_path": "storage/datasets/kaggle-dbqa/databases/TheHistoryofBaseball/TheHistoryofBaseball.sqlite", "error": "predicted: 'player.team_id'"}, {"query": "SELECT DISTINCT notes FROM player_award WHERE player_id = \"willite01\"", "prediction": "select", "db_path": "storage/datasets/kaggle-dbqa/databases/TheHistoryofBaseball/TheHistoryofBaseball.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT Longitude, Latitude FROM nuclear_power_plants WHERE ReactorType = \"BWR\" ORDER BY ConstructionStartAt LIMIT 1", "prediction": "select t1.name, t2.constructionstartat from nuclear_power_plants as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/GeoNuclearData/GeoNuclearData.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT groupName, groupYear FROM torrents", "prediction": "select count(*), t1.releasetype from torrents as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT groupName FROM torrents WHERE groupYear > 2000 ORDER BY totalSnatched DESC LIMIT 5", "prediction": "select t2.releasetype from torrents as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT groupName FROM torrents WHERE artist = \"lasean camry\" AND totalSnatched = (SELECT max(totalSnatched) FROM torrents WHERE artist = \"lasean camry\") UNION SELECT groupName FROM torrents WHERE artist = \"lasean camry\" AND totalSnatched = (SELECT min(totalSnatched) FROM torrents WHERE artist = \"lasean camry\")", "prediction": "select max(t1.releasetype), min(t1.releasetype) from torrents as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT groupName FROM torrents WHERE releaseType = \"album\" ORDER BY totalSnatched DESC LIMIT 10", "prediction": "select t2.", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT T1.tag FROM torrents as T2 JOIN tags as T1 ON T1.id = T2.id WHERE T2.groupYear >= 2010 GROUP BY T1.tag ORDER BY T2.totalSnatched DESC LIMIT 10", "prediction": "What", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT groupYear FROM torrents GROUP BY groupYear ORDER BY count(groupName) DESC LIMIT 1", "prediction": "select t1.releasetype from torrents as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 1", "prediction": "select t2.releasetype from torrents as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT artist FROM torrents GROUP BY artist ORDER BY sum(totalSnatched) DESC LIMIT 1", "prediction": "select t1.", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT sum(totalSnatched), releaseType FROM torrents GROUP BY releaseType", "prediction": "select count(*), t1.releasetype from", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: 't1'"}, {"query": "SELECT sum(totalSnatched) FROM torrents WHERE releaseType = \"ep\"  UNION SELECT sum(totalSnatched) FROM torrents WHERE releaseType = \"album\"", "prediction": "select count(*), t1.", "db_path": "storage/datasets/kaggle-dbqa/databases/WhatCDHipHop/WhatCDHipHop.sqlite", "error": "predicted: 'from' not found"}, {"query": "SELECT Outcome FROM GreaterManchesterCrime WHERE CrimeID = \"6B:E2:54:C6:58:D2\"", "prediction": "select outcome from greatermanchestercrime as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/GreaterManchesterCrime/GreaterManchesterCrime.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT * FROM Fires WHERE State = \"TX\" AND STAT_CAUSE_DESCR LIKE \"Campfire\"", "prediction": "select distinct t1.fire_size_class from fires as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/USWildFires/USWildFires.sqlite", "error": "predicted: list index out of range"}, {"query": "SELECT sum(FIRE_SIZE) FROM Fires WHERE STATE = \"TX\" AND FIRE_YEAR BETWEEN 2000 AND 2010  UNION SELECT sum(FIRE_SIZE) FROM Fires WHERE STATE = \"TX\" AND FIRE_YEAR BETWEEN 1990 AND 2000", "prediction": "select count(*), t1.county from fires as t1 join", "db_path": "storage/datasets/kaggle-dbqa/databases/USWildFires/USWildFires.sqlite", "error": "predicted: list index out of range"}]